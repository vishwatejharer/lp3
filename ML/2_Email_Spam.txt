import numpy as np
import pandas as pd
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.metrics import mean_squared_error,mean_absolute_error
from sklearn.metrics import accuracy_score

df = pd.read_csv("emails.csv", error_bad_lines=False)
df

df.info()

df.describe()

df.isnull().sum()

"""### KNN (K-Nearest Neighbors)"""

x = df.iloc[:,1:3001]
y = df.iloc[:,-1].values

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state = 1)

knn = KNeighborsClassifier(n_neighbors=8)
knn.fit(x_train, y_train)
y_pred = knn.predict(x_test)

print("MSE:", mean_squared_error(y_test, y_pred))
print("MAE:", mean_absolute_error(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))
print("R2 Score:",metrics.r2_score(y_test, y_pred))
print("Accuracy Score for KNN:", accuracy_score(y_test, y_pred))

"""### SVM (Support Vector Machine)"""

svc = SVC(C=1.0, kernel='rbf', gamma='auto') 
svc.fit(x_train, y_train)
y_pred = svc.predict(x_test)

print("MSE:", mean_squared_error(y_test, y_pred))
print("MAE:", mean_absolute_error(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))
print("R2 Score:",metrics.r2_score(y_test, y_pred))
print("Accuracy Score for SVC:", accuracy_score(y_test, y_pred))